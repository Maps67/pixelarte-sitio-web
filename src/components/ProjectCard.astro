---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'a'> {
    slug: string;
    title: string;
    service: string;
    description?: string;
    mediaType: 'image' | 'video';
    isFeatured?: boolean;
    href: string;
    enableLightbox?: boolean;
}

const { slug, title, service, description, mediaType, isFeatured, href, enableLightbox } = Astro.props;

const videoUrl = `/images/${slug}.mp4`;
const posterUrl = `/images/${slug}-poster.webp`;
const imageUrl = `/images/${slug}.webp`;
---

<a 
    href={href}
    class:list={[
        { 'featured-card': isFeatured, 'project-card': !isFeatured },
        { 'glightbox': enableLightbox }
    ]}
    data-astro-prefetch="false"
>
    <div class="project-image-container">
        {mediaType === 'video' ? (
            <video src={videoUrl} poster={posterUrl} autoplay loop muted playsinline controls />
        ) : (
            <img src={imageUrl} alt={`Imagen del proyecto ${title}`} loading="lazy" />
        )}
        <div class="project-service-tag">{service}</div>
    </div>
    <div class="project-info">
        {isFeatured ? (
            <>
                <h2 class="project-title">{title}</h2>
                <p class="project-description">{description}</p>
                <span class="project-link">Explorar Proyecto &rarr;</span>
            </>
        ) : (
            <>
                <h3 class="project-title-small">{title}</h3>
                <span class="project-link-small">Explorar &rarr;</span>
            </>
        )}
    </div>
</a>

<style>
.featured-card, .project-card { border: 1px solid var(--color-borde); border-radius: 0.75rem; overflow: hidden; text-decoration: none; transition: border-color 0.3s ease, transform 0.3s ease; display: block; }
.featured-card { display: grid; grid-template-columns: 1fr; background-color: var(--color-superficie); }
@media (min-width: 768px) { .featured-card { grid-template-columns: 2fr 1fr; } }
.project-card { background-color: var(--color-superficie); }
.featured-card:hover, .project-card:hover { transform: translateY(-8px); border-color: var(--color-acento); }
.project-image-container { position: relative; overflow: hidden; aspect-ratio: 16 / 9; background-color: var(--color-fondo-oscuro); }
.project-image-container img, .project-image-container video { width: 100%; height: 100%; object-fit: cover; transition: transform 0.3s ease; }
.featured-card:hover .project-image-container img, .featured-card:hover .project-image-container video, .project-card:hover .project-image-container img, .project-card:hover .project-image-container video { transform: scale(1.05); }
.project-service-tag { position: absolute; top: 1rem; left: 1rem; background-color: var(--color-acento); color: #fff; padding: 0.25rem 0.75rem; border-radius: 9999px; font-size: 0.75rem; font-weight: 600; z-index: 2; }
.project-info { padding: 1.5rem; }
.featured-card .project-info { padding: 2rem; display: flex; flex-direction: column; justify-content: center; }
.project-title { font-size: 2rem; color: var(--color-texto); margin-bottom: 1rem; }
.project-description { color: #94a3b8; line-height: 1.6; margin-bottom: 1.5rem; }
.project-link { color: var(--color-acento); font-weight: 600; font-size: 1.125rem; }
.project-title-small { font-size: 1.5rem; color: var(--color-texto-claro); margin-bottom: 0.5rem; }
.project-link-small { color: var(--color-acento); font-weight: 600; }
</style>