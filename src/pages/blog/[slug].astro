---
// src/pages/blog/[slug].astro (Corrected Full Version)
import Layout from '../../layouts/Layout.astro';
import { CollectionEntry, getCollection } from 'astro:content';

// 1. getStaticPaths remains the same - it works during build
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// 2. Access props robustly
// We directly get 'post' from Astro.props and assert its type
const { post } = Astro.props as { post: CollectionEntry<'blog'> };

// --- Add a check here just in case ---
if (!post) {
  console.error(`Error: Post data not found for slug in props!`);
  // You might want to return a 404 or a specific error page here
  // For now, we'll throw an error to see it in logs if this happens
  throw new Error("Post data missing in props"); 
}
// --- End check ---

// 3. Render the content (this should now work)
const { Content } = await post.render();

// 4. Extract data using post.data
const { title, description, pubDate, author, image } = post.data;
---

<Layout title={`${title} | Blog Pixelarte Studio`} description={description}>
  <article class="bg-claro py-16 md:py-24">
    <div class="container max-w-3xl mx-auto px-4">

      <header class="mb-10 text-center border-b border-borde-claro pb-6">
        <h1 class="text-4xl md:text-5xl font-playfair font-bold text-oscuro mb-4">
          {title}
        </h1>
        <p class="text-secundario">
          Por {author} | Publicado el {new Date(pubDate).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' })}
        </p>
      </header>

      {image && image.url && (
        <img
          src={image.url}
          alt={image.alt || ''}
          class="rounded-lg mb-10 w-full aspect-video object-cover shadow-md"
          width="800"
          height="450"
          loading="lazy"
          decoding="async"
        />
      )}

      <div class="prose max-w-none">
        <Content />
      </div>

       <div class="text-center mt-10 pt-6 border-t border-borde-claro">
          <a href="/blog/" class="btn-primary">&larr; Volver al Blog</a>
       </div>

    </div>
  </article>
</Layout>

{/* Your <style is:global> remains the same */}
<style is:global>
  .prose {
    font-size: 1.125rem;
    line-height: 1.8;
    color: var(--color-texto-secundario);
  }
  .prose h2 {
    font-size: 1.875rem;
    color: var(--color-texto-oscuro);
    margin-top: 2.5em;
    margin-bottom: 1em;
    font-family: 'Playfair Display', serif;
    padding-bottom: 0.3em;
    border-bottom: 1px solid var(--color-borde-claro);
  }
  .prose h3 {
    font-size: 1.5rem;
    color: var(--color-texto-oscuro);
    margin-top: 2em;
    margin-bottom: 1em;
     font-family: 'Playfair Display', serif;
  }
  .prose p {
    margin-bottom: 1.25em;
  }
  .prose a {
    color: var(--color-acento);
    text-decoration: underline;
    transition: color 0.2s ease;
  }
  .prose a:hover {
    color: #1D4ED8; /* Azul más oscuro al pasar el ratón */
  }
  .prose strong {
    font-weight: 700;
    color: var(--color-texto-oscuro);
  }
  .prose ul, .prose ol {
    margin-left: 1.5em;
    margin-bottom: 1.25em;
    padding-left: 1em;
  }
  .prose li {
    margin-bottom: 0.5em;
  }
  .prose li > p {
      margin-bottom: 0.5em;
  }
  .prose blockquote {
    border-left: 4px solid var(--color-acento);
    padding-left: 1em;
    margin-left: 0;
    margin-right: 0;
    font-style: italic;
    color: var(--color-texto-secundario);
    background-color: #f9fafb;
    padding-top: 0.5em;
    padding-bottom: 0.5em;
  }
  .prose img {
      max-width: 100%;
      height: auto;
      border-radius: 0.5rem;
      margin-top: 2em;
      margin-bottom: 2em;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1); /* Sombra sutil */
  }
   .prose code {
    background-color: #e5e7eb; /* Gris claro */
    color: var(--color-texto-oscuro);
    padding: 0.2em 0.4em;
    border-radius: 0.25rem;
    font-size: 0.9em;
    font-family: monospace; /* Fuente monoespaciada */
  }
  .prose pre {
    background-color: var(--color-oscuro-contraste); /* Fondo oscuro */
    color: var(--color-texto-claro); /* Texto claro */
    padding: 1em;
    border-radius: 0.5rem;
    overflow-x: auto; /* Scroll horizontal si es necesario */
    font-family: monospace;
  }
  .prose pre code { /* Estilo específico para código dentro de <pre> */
      background-color: transparent;
      color: inherit;
      padding: 0;
      font-size: inherit;
  }
  /* Estilo para el mensaje de error de renderizado */
  .text-red-600 { color: #dc2626; }
  .font-bold { font-weight: 700; }
</style>